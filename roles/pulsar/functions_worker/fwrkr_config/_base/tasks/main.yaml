###
# Copyright DataStax, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###


---
#########################
# Common dedicated functions worker configuration settings
# -----------------------
# Get the functions worker node count which is requrired to configure function package replication setting
- name: Set functions worker node count into a variable
  set_fact: 
    fwrkrCnt: |
      {% set count = [0] %}
      {% for node in groups['functions_worker'] %}
      {%   if count.append(count.pop() + 1) %}{% endif %}
      {% endfor %}
      {{ count.pop() }}
- debug: msg="fwrkrCnt - {{ fwrkrCnt }}"
  when: show_debug_msg|bool

- name: Modify Pulsar functions worker config file for mandatory settings
  vars:
    node_index : "{{ groups['functions_worker'].index(inventory_hostname) }}"
  lineinfile:
    path: "{{ functions_worker_conf_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^workerId:", line: "workerId: {{ cluster_name }}-functions_worker-{{ node_index }}" }
    - { regexp: "^workerHostname:", line: "workerHostname: {{ private_ip }}" }
    - { regexp: "^workerPort:", line: "workerPort: {{ funcs_worker_port }}" }
    - { regexp: "^workerPortTls:", line: "workerPortTls: {{ funcs_worker_port_tls }}" }
    - { regexp: "^configurationMetadataStoreUrl:", line: "configurationMetadataStoreUrl: {{ hostvars[groups['zookeeper'][0]]['zkListStrVar']|trim }}" }
    - { regexp: "^pulsarFunctionsCluster:", line: "pulsarFunctionsCluster: {{ cluster_name }}" }
    - { regexp: "^numFunctionPackageReplicas:", line: "numFunctionPackageReplicas: {% if fwrkrCnt|trim|int > funcs_worker_package_replica %}{{ funcs_worker_package_replica }}{% elif fwrkrCnt|trim|int == 1 %}1{% else %}2{% endif %}" }
    - { regexp: "^(#\\s?)?additionalJavaRuntimeArguments:", line: "additionalJavaRuntimeArguments: ['{{  pulsar_extra_jvm_opts }}']" }
    # Broker authN/authR related settings (used for functions worker connection to a broker)
    - { regexp: "^(#\\s?)?brokerClientAuthenticationEnabled:", 
        line: "brokerClientAuthenticationEnabled: {% if enable_brkr_authNZ is not defined %}false{% else %}{{ enable_brkr_authNZ|bool|lower }}{% endif %}" }
    - { regexp: "^(#\\s?)?brokerClientAuthenticationPlugin:", 
        line: "brokerClientAuthenticationPlugin: {% if enable_brkr_authNZ is defined and enable_brkr_authNZ|bool %}org.apache.pulsar.client.impl.auth.AuthenticationToken{% else %} {% endif %}" }
    - { regexp: "^(#\\s?)?brokerClientAuthenticationParameters:", 
        line: "brokerClientAuthenticationParameters: {% if enable_brkr_authNZ is defined and enable_brkr_authNZ|bool %}file://{{ tgt_pulsar_sec_dir }}/jwt/token/{{ brkr_super_user_roles[0] }}.jwt{% else %} {% endif %}" }
    # Broker TLS related settings (used for functions worker connection to a broker)
    - { regexp: "^useTls:", line: "useTls: {% if enable_brkr_tls is defined and enable_brkr_tls|bool %}true{% else %}false{% endif %}" }
    - { regexp: "^pulsarWebServiceUrl:", 
        line: "pulsarWebServiceUrl: {% if enable_brkr_tls is defined and enable_brkr_tls|bool %}https://{{ hostvars[groups['broker'][0]]['webSvcTlsListStr']|trim }}{% else %}http://{{ hostvars[groups['broker'][0]]['webSvcListStr']|trim }}{% endif %}" }
    - { regexp: "^pulsarServiceUrl:", 
        line: "pulsarServiceUrl: {% if enable_brkr_tls is defined and enable_brkr_tls|bool %}pulsar+ssl://{{ hostvars[groups['broker'][0]]['brokerSvcTlsListStr']|trim }}{% else %}pulsar://{{ hostvars[groups['broker'][0]]['brokerSvcListStr']|trim }}{% endif %}" }
    - { regexp: "^(#\\s?)?brokerClientTrustCertsFilePath:", 
        line: "brokerClientTrustCertsFilePath: {% if enable_brkr_tls is defined and enable_brkr_tls|bool %}{{ tgt_pulsar_sec_dir }}/tls/rootca/broker_{{ public_cacert_name }}{% else %} {% endif %}" }

- name: Modify Pulsar functions worker config for misc settings
  lineinfile:
    path: "{{ functions_worker_conf_file }}"
    regexp: "^(#\\s?)?{{ item.key }}:"
    line: "{{ item.key }}: {{ item.value }}"
  with_items:
    - "{{ lookup('dict', misc_funcs_worker_config_dict) }}"

- name: Comment out depreacated config settings for dedicated functions workers
  replace:
    path: "{{ functions_worker_conf_file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - { regexp: '(^configurationStoreServers:)(.*)$', replace: '#\1 \2' }
    - { regexp: '(^zooKeeperSessionTimeoutMillis:)(.*)$', replace: '#\1 \2' }
    - { regexp: '(^zooKeeperOperationTimeoutSeconds:)(.*)$', replace: '#\1 \2' }