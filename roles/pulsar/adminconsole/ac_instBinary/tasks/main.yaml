###
# Copyright DataStax, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###


---
- name: Create the specified Pulsar user group
  group: 
    name: "{{ pulsar_user_group }}"
    system: yes
    state: present

- name: Create the specified Pulsar user
  user: 
    name: "{{ pulsar_user }}"
    create_home: false
    system: yes
    group: "{{ pulsar_user_group }}"
    state: present

# This makes it easier to run Pulsar CLI commands under the current SSH user
- name: If needed and for convenience, add SSH user into group {{ pulsar_user_group }}
  user:
    name: "{{ ansible_ssh_user }}"
    groups: "{{ pulsar_user_group }}"
    append: yes
  when: ssh_user_in_pulsar_group|bool

- name: Create relevant AdminConsole folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
    mode: "{{ file_permission_mode }}"
  with_items:
    - "{{ tgt_pkg_adminConsole_dir }}"
    - "{{ tgt_adminConsole_inst_dir }}"

- name: Check if AdminConsole binary already exists
  stat:
    path: "{{ tgt_pkg_adminConsole_dir }}/{{ adminConsole_bin_name }}"
  register: adminConsole_distro_stat
- debug: msg={{ adminConsole_distro_stat.stat }}
  when: show_debug_msg|bool

- name: If AdminConsole doesn't exist on the target host yet, copy it from local host if requested so
  copy:
    src: "{{ local_bin_homedir }}/{{ adminConsole_bin_name }}"
    dest: "{{ tgt_pkg_adminConsole_dir }}/{{ adminConsole_bin_name }}"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
  when: not adminConsole_distro_stat.stat.exists and not internet_download|bool

- name: If AdminConsole doesn't exist on the target host yet, download it from internet if requested so
  get_url:
    url: "{{ adminConsole_download_url }}"
    dest: "{{ tgt_pkg_adminConsole_dir }}/{{ adminConsole_bin_name }}"
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"
  when: not adminConsole_distro_stat.stat.exists and internet_download|bool

- name: Extract AdminConsole binary release to the target directory
  unarchive:
    src: "{{ tgt_pkg_adminConsole_dir }}/{{ adminConsole_bin_name }}"
    remote_src: yes
    dest: "{{ tgt_adminConsole_inst_dir }}"
    extra_opts: [--strip-components=1]
    keep_newer: yes
    owner: "{{ pulsar_user }}"
    group: "{{ pulsar_user_group }}"